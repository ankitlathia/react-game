{"version":3,"sources":["containers/App.js","reducers/index.js","index.js","store/configureStore.js"],"names":["App","className","Component","connect","rootReducer","combineReducers","initialState","store","createStore","render","document","getElementById"],"mappings":"wOAGMA,E,iLAIE,OACI,yBAAKC,UAAU,aAAf,iB,GALMC,aAYHC,cAAQ,KAAK,KAAbA,CAAmBH,G,OCXnBI,EAFKC,YAAgB,ICIpC,ICHuCC,EDGjCC,ECFYC,YAAYJ,EAAaE,GDI3CG,iBACI,kBAAC,IAAD,CAAUF,MAAOA,GACb,kBAAC,EAAD,OAEJG,SAASC,eAAe,W","file":"static/js/main.23a37d2c.chunk.js","sourcesContent":["import React, { Component }  from 'react'\nimport { connect } from 'react-redux'\n\nclass App extends Component {\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                {`Home page`}\n            </div>\n        )\n    }\n}\n\nexport default connect(null,null)(App);","import { combineReducers } from 'redux'\n\nconst rootReducer = combineReducers({});\n\nexport default rootReducer;","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './containers/App';\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)","import { createStore } from 'redux'\nimport rootReducer from '../reducers'\n\nexport default function configureStore(initialState) {\n    const store = createStore(rootReducer, initialState);\n\n    // if (module.hot) {\n    //     // Enable Webpack hot module replacement for reducers\n    //     module.hot.accept('../reducers', () => {\n    //         const nextReducer = require('../reducers');\n    //         store.replaceReducer(nextReducer);\n    //     })\n    // }\n\n    return store;\n}"],"sourceRoot":""}